Falling Shapes Game
Falling Shapes is a simple game built with Pygame where the player controls a paddle at the bottom of the screen and tries to shoot falling enemy shapes while avoiding collisions with them.

Features
Player paddle movement: The player can move the paddle left and right using the arrow keys.
Shooting: The player can shoot bullets by pressing the spacebar.
Enemy shapes: Enemy shapes fall from the top of the screen and move horizontally. The player must shoot them to earn points and avoid collisions.
Health system: The player starts with 100 health points. Colliding with an enemy shape or missing a shape that reaches the bottom of the screen reduces the player's health.
Game over: If the player's health reaches zero, the game ends and transitions to the game over scene.
Game over scene: Displays a sequence of images and plays an audio story. The player can press Enter to restart the game.
Score tracking: The player earns points for shooting enemy shapes.
Installation
Clone the repository:

Copy code
git clone https://github.com/your-username/falling-shapes.git
Change to the project directory:

Copy code
cd falling-shapes
Install the required dependencies:

Copy code
pip install -r requirements.txt
Usage
To start the game, run the following command:


Copy code
python falling_shapes.py
Use the following controls:

Left arrow key: Move the paddle to the left
Right arrow key: Move the paddle to the right
Spacebar: Shoot bullets
G key: Toggle the grid display
Enter key: Start the game or restart the game after game over
Development
The game uses the Pygame library for graphics and input handling. It consists of the following main components:

falling_shapes.py: The main game file that initializes Pygame, sets up the game scenes, and runs the game loop.
game_runner.py: A utility script that automatically reloads the game when changes are detected in the source files.
scenes/: Directory containing the different game scenes (start game, game, game over).
shared/: Directory containing shared game components and utilities (grid, player, NPC, bullet, game settings).
To make changes to the game, modify the relevant source files and run game_runner.py to automatically reload the game when changes are saved.

Credits
Game background image: Source
Player image: Source
Enemy image: Source
Game over story audio: Source
Game over story images: Source 1, Source 2, Source 3
License
This project is licensed under the MIT License.

